dist: focal

language: minimal

stages:
  - lint
  - test
  - deploy

if: branch = master OR type = pull_request OR tag is present

before_install:
  - tmpdaemon=$(mktemp)
  - sudo jq '."registry-mirrors" += ["https://mirror.gcr.io"]' /etc/docker/daemon.json > "$tmpdaemon"
  - sudo mv "$tmpdaemon" /etc/docker/daemon.json
  - sudo systemctl daemon-reload
  - sudo systemctl restart docker
  - docker system info

jobs:
  include:
    - stage: lint
      name: Project Syntax Verification
      script: make docker/run target=lint
    - stage: test
      name: Apply Terraform test configs in mockstack
      install:
        - make docker-compose/install
        - make mockstack/up
        - id -u
        - id -g
        - >-
          docker build -t terraform-aws-wrangler-integration-test:latest
          --build-arg PROJECT_NAME=tardigrade-ci
          --build-arg USER_UID=$(id -u)
          --build-arg USER_GID=$(id -g)
          -f Dockerfile .
        - >-
          docker run --network terraform_pytest_default -e MOCKSTACK_HOST=localstack -e PYTEST_ARGS=""
          -v "/home/travis/build/plus3it/terraform-aws-wrangler/:/workdir/"
          -v "/home/travis/build/plus3it/terraform-aws-wrangler/tardigrade-ci/:/tardigrade-ci/"
          -v "/home/travis/.aws/:/home/tardigrade-ci/.aws/:ro"
          -e AWS_DEFAULT_REGION=us-east-1
          -e GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN
          -w /workdir/
          --entrypoint bash
          --name dummy
          -dit
          terraform-aws-wrangler-integration-test:latest
        - docker exec dummy whoami
        - docker exec dummy ls -al
        - docker exec dummy bash -c 'ls -al $HOME'
        - docker exec dummy ls -al /tardigrade-ci
        - docker exec dummy ls -al /workdir/tardigrade-ci
      script: make mockstack/dummy
      after_script:
        - make mockstack/clean
    - stage: deploy
      if: branch = master AND type = push AND repo = plus3it/terraform-aws-wrangler
      before_script:
        - |
          PRIOR_VERSION=$(git describe --abbrev=0 --tags)
          RELEASE_VERSION=$(grep current_version $TRAVIS_BUILD_DIR/.bumpversion.cfg | sed 's/^.*= //' )
          RELEASE_BODY="* [TERRAFORM-AWS-WRANGLER v$RELEASE_VERSION CHANGELOG](https://github.com/plus3it/terraform-aws-wrangler/blob/$RELEASE_VERSION/CHANGELOG.md)"
          export PRIOR_VERSION RELEASE_VERSION RELEASE_BODY
      script: skip
      before_deploy:
        - |
          (set -x; git tag -a $RELEASE_VERSION -m $RELEASE_VERSION)
      deploy:
        provider: releases
        api_key: $GITHUB_API_KEY
        name: $RELEASE_VERSION
        body: $RELEASE_BODY
        tag_name: $RELEASE_VERSION
        target_commitish: $TRAVIS_COMMIT
        draft: false
        on:
          branch: master
          repo: plus3it/terraform-aws-wrangler
          condition: '"$PRIOR_VERSION" != "$RELEASE_VERSION"'
